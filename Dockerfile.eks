FROM public.ecr.aws/docker/library/python:3.13-bookworm as builder
LABEL maintainer="joony.kim <bestheroz@gmail.com>"

ENV POETRY_VERSION=2.1.3
RUN pip install --disable-pip-version-check --no-cache-dir poetry==$POETRY_VERSION

ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"
RUN python -m venv $VIRTUAL_ENV

COPY poetry.lock pyproject.toml ./
RUN poetry config virtualenvs.create false \
    && poetry install --only=main --no-root

FROM public.ecr.aws/docker/library/python:3.13-slim-bookworm as runner
LABEL maintainer="joony.kim <bestheroz@gmail.com>"

RUN useradd --create-home appuser
USER appuser

ENV VIRTUAL_ENV=/opt/venv
COPY --from=builder $VIRTUAL_ENV $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

WORKDIR /opt/code
COPY ./dotenvs dotenvs/
COPY ./app app/
COPY ./hypercorn.toml hypercorn.toml

EXPOSE 8000

# Hypercorn을 사용하여 FastAPI 애플리케이션 실행
# HTTP/2 지원, 고성능 ASGI 서버
# 권장되는 worker 수 계산: allocated_cpu * 2 + 1
# 예: 2 CPU 할당 시 workers = 5
CMD ["hypercorn", "app.main:app", "--config", "hypercorn.toml"]
